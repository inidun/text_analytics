[tool]
[tool.poetry]
name = "humlab-inidun"
version = "0.1.1"
description = "INIDUN research project text analysis tools and utilities"
authors = ["Roger MÃ¤hler <roger.mahler@hotmail.com>"]
packages = [
    { include = "notebooks" }
]
classifiers = [
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Topic :: Software Development',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://inidun.github.io"
repository = "https://github.com/inidun/text_analytics"


[tool.poetry.dependencies]
bokeh = "*"
click = "*"
ftfy = "*"
gensim = "*"
ipyaggrid = "*"
jupyter = "*"
jupyterlab = "*"
matplotlib = "*"
memoization = "*"
nltk = "*"
pandas = "*"
pandocfilters = "==1.4.2"
python = "==3.8.5"
spacy = "*"
textacy = "*"
wordcloud = "*"
qgrid = "^1.3.1"
ipyfilechooser = "^0.4.0"
jupyter-bokeh = "^2.0.4"
ipywidgets = "^7.5.1"
tqdm = "^4.51.0"
glove-python-binary = "^0.2.0"
sidecar = "^0.4.0"
pandas-bokeh = "^0.5.2"
humlab-penelope = "^0.2.35"


[tool.poetry.dev-dependencies]
black = "==20.*,>=20.8.0.b1"
coverage = "*"
dephell = "*"
flake8 = "==3.*,>=3.8.4"
flake8-black = "==0.*,>=0.2.1"
flake8-pytest-style = "==1.*,>=1.3.0"
invoke = "*"
isort = "==5.*,>=5.5.4"
jupytext = "*"
mypy = "==0.*,>=0.782.0"
nbstripout = "*"
pep8-naming = "==0.*,>=0.11.1"
pre-commit = "*"
pycodestyle = "==2.*,>=2.6.0"
pyflakes = "==2.*,>=2.2.0"
pylint = "*"
pytest = "*"
pytest-cov = "==2.*,>=2.10.1"
rope = "*"
yapf = "==0.*,>=0.30.0"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-q",
    # "-s",
]
log_cli = "False"
testpaths = [
    "tests",
]
norecursedirs = ['notebooks', '.git', 'data', 'output', 'deprecated', '__pycache__', 'tmp']
python_files = "*_test.py"
python_functions = "test_*"
filterwarnings = [
#   "ignore",
  "ignore::_pytest.warning_types.PytestCollectionWarning"
]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "poetry", path = "pyproject.toml"}

[tool.black]
line-length = 120
target-version = ["py38"]
skip-string-normalization = true
# include = '\.pyi?$'
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.ipynb_checkpoints
  | deprecated
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = [ "notebooks", "tests" ]
known_first_party = [ "__paths__" ]

[tool.coverage]
# https://github.com/nedbat/coveragepy

    [tool.coverage.run]
    source = ["notebooks"]
    branch = true
    omit = ['']

    [tool.coverage.report]
    exclude_lines = [
        "pragma: no cover",
        "raise NotImplementedError"
    ]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
